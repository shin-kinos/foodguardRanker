% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modelBuilder.R
\name{ModelBuilderConfigParser}
\alias{ModelBuilderConfigParser}
\title{R6 class to read ModelBuilderConfig file and parse the content.}
\description{
R6 class to read ModelBuilderConfig file and parse the content.

R6 class to read ModelBuilderConfig file and parse the content.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{experimentInfo}}{List - list of experiment info read from config file.}

\item{\code{mlRankingInfo}}{List - list of ML ranking info read from config file.}

\item{\code{util}}{Class - class of ModelBuilderUtility.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ModelBuilderConfigParser-new}{\code{ModelBuilderConfigParser$new()}}
\item \href{#method-ModelBuilderConfigParser-showConfigSummary}{\code{ModelBuilderConfigParser$showConfigSummary()}}
\item \href{#method-ModelBuilderConfigParser-checkConfigFileContent}{\code{ModelBuilderConfigParser$checkConfigFileContent()}}
\item \href{#method-ModelBuilderConfigParser-clone}{\code{ModelBuilderConfigParser$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModelBuilderConfigParser-new"></a>}}
\if{latex}{\out{\hypertarget{method-ModelBuilderConfigParser-new}{}}}
\subsection{Method \code{new()}}{
Initialise a ModelBuilderConfigParser object to read and extract input config JSON file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelBuilderConfigParser$new(configFileName = "ModelBuilderConfig")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{configFileName}}{A string representing a name of input config JSON file, default ModelBuilderConfig.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModelBuilderConfigParser-showConfigSummary"></a>}}
\if{latex}{\out{\hypertarget{method-ModelBuilderConfigParser-showConfigSummary}{}}}
\subsection{Method \code{showConfigSummary()}}{
Print a content of input config file when starting program - it is used in
modelBuilder function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelBuilderConfigParser$showConfigSummary()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModelBuilderConfigParser-checkConfigFileContent"></a>}}
\if{latex}{\out{\hypertarget{method-ModelBuilderConfigParser-checkConfigFileContent}{}}}
\subsection{Method \code{checkConfigFileContent()}}{
Check config file content - if any unexpected pieces of input information
are detected, program is killed immediately with errorBomb member from
ModelBuilderUtility class, BOOOOOOOOOM !!!
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelBuilderConfigParser$checkConfigFileContent()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModelBuilderConfigParser-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ModelBuilderConfigParser-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelBuilderConfigParser$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
